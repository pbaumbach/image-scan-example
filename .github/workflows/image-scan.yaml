name: Scan Container Images

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  GITHUB_SHA: ${{ github.sha }}
  FALCON_CLOUD_REGION: us-1
  CONTAINER_REPO: sagikazarmark/dvwa
  CONTAINER_TAG: latest
#  CONTAINER_TAG: ${{ github.run_id }}

jobs:


  build-scan:
    runs-on: ubuntu-20.04
        
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4

#    - name: Docker Login
#      uses: docker/login-action@v3
#      with:
#        username: ${{ secrets.DOCKER_USER }}
#        password: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Build and push Docker images
#      uses: docker/build-push-action@v5
#      with:
#        context: '.'
#        push: false
#        load: true
#        tags: "${{ env.CONTAINER_REPO }}:${{ env.CONTAINER_TAG }}"

    - name: Docker build & tag image
      run: |
        docker build -t $CONTAINER_REPO:latest -t $CONTAINER_REPO:latest .
    
    - name: Scan Container Image from Repository
      uses: CrowdStrike/container-image-scan-action@main
      id: image-scan
      with:
        container_repository: ${{ env.CONTAINER_REPOSITORY }}
        container_tag: ${{ env.CONTAINER_TAG }}
        crowdstrike_region: ${{ env.FALCON_CLOUD_REGION }}
        crowdstrike_score: 500
        retry_count: 30
      env:
        FALCON_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}
        FALCON_CLIENT_ID: ${{ secrets.FALCON_CLIENT_ID }}
        JSON_REPORT: /tmp/report.json

    - name: Print CrowdStrike Full Image Scan Report
      if: always()
      run: |
        jq '.' /tmp/report.json

    - name: Push docker image
      run: echo "Image would be pushed here"
          
    - name: Do something if high vulns found
      run: echo "VULNS FOUND - EXITCODE - ${{ steps.image-scan.outputs.exit-code }}"
      if:  always() && steps.image-scan.outputs.exit-code == 1
